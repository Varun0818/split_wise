# Generated by Django 5.2 on 2025-04-05 08:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='expense_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('split_type', models.CharField(choices=[('EQUAL', 'Split Equally'), ('PERCENTAGE', 'Split by Percentage'), ('DIRECT', 'Split by Direct Amount'), ('PARENT_CHILD', 'Parent-Child Split')], default='EQUAL', max_length=20)),
                ('paid_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paid_expenses', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='expenses.group')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_settled', models.BooleanField(default=False)),
                ('creditor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credits', to=settings.AUTH_USER_MODEL)),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debts', to=settings.AUTH_USER_MODEL)),
                ('expense', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debt_set', to='expenses.expense')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_debts', to='expenses.group')),
            ],
        ),
        migrations.CreateModel(
            name='ParentExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_parent_expenses', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_expenses', to='expenses.group')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='parent_expense',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_expenses', to='expenses.parentexpense'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics')),
                ('dark_mode_enabled', models.BooleanField(default=False)),
                ('preferred_currency', models.CharField(default='USD', max_length=3)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecurringExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], max_length=10)),
                ('next_due_date', models.DateField()),
                ('split_type', models.CharField(choices=[('EQUAL', 'Split Equally'), ('PERCENTAGE', 'Split by Percentage'), ('DIRECT', 'Split by Direct Amount'), ('PARENT_CHILD', 'Parent-Child Split')], default='EQUAL', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('split_details', models.TextField(blank=True, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_expenses', to='expenses.group')),
                ('paid_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paid_recurring_expenses', to=settings.AUTH_USER_MODEL)),
                ('parent_expense', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recurring_child_expenses', to='expenses.parentexpense')),
                ('participants', models.ManyToManyField(related_name='recurring_expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['next_due_date'],
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='recurring_expense',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='expenses.recurringexpense'),
        ),
        migrations.CreateModel(
            name='Split',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_owed', models.DecimalField(decimal_places=2, max_digits=10)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='splits', to='expenses.expense')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_splits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['created_at'], name='expenses_gr_created_141486_idx'),
        ),
        migrations.AddIndex(
            model_name='debt',
            index=models.Index(fields=['creditor'], name='expenses_de_credito_730644_idx'),
        ),
        migrations.AddIndex(
            model_name='debt',
            index=models.Index(fields=['debtor'], name='expenses_de_debtor__a74061_idx'),
        ),
        migrations.AddIndex(
            model_name='debt',
            index=models.Index(fields=['group'], name='expenses_de_group_i_7608b8_idx'),
        ),
        migrations.AddIndex(
            model_name='debt',
            index=models.Index(fields=['updated_at'], name='expenses_de_updated_7921e1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='debt',
            unique_together={('creditor', 'debtor', 'group')},
        ),
        migrations.AddIndex(
            model_name='parentexpense',
            index=models.Index(fields=['created_at'], name='expenses_pa_created_34b275_idx'),
        ),
        migrations.AddIndex(
            model_name='parentexpense',
            index=models.Index(fields=['group'], name='expenses_pa_group_i_942eef_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringexpense',
            index=models.Index(fields=['next_due_date'], name='expenses_re_next_du_e82869_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringexpense',
            index=models.Index(fields=['group'], name='expenses_re_group_i_056146_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringexpense',
            index=models.Index(fields=['paid_by'], name='expenses_re_paid_by_13dbb2_idx'),
        ),
        migrations.AddIndex(
            model_name='recurringexpense',
            index=models.Index(fields=['frequency'], name='expenses_re_frequen_35ec70_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['created_at'], name='expenses_ex_created_52941d_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['group'], name='expenses_ex_group_i_7493d0_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['paid_by'], name='expenses_ex_paid_by_a99d03_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['parent_expense'], name='expenses_ex_parent__12af13_idx'),
        ),
        migrations.AddIndex(
            model_name='split',
            index=models.Index(fields=['expense'], name='expenses_sp_expense_b722f7_idx'),
        ),
        migrations.AddIndex(
            model_name='split',
            index=models.Index(fields=['user'], name='expenses_sp_user_id_6307a6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='split',
            unique_together={('expense', 'user')},
        ),
    ]
